/*
    CSCE 315-501
    Jonathan Sandell, Vyas Sathya, Esteban Solis, Josh Orndorff
    Project 3 - Final submission
    12/10/2014

    Description: Provides a place for users to check their danger history in a visual way.

    The GraphView library used is included via the line in the gradle build file:

    compile 'com.jjoe64:graphview:3.1.3'

    More information about this library can be found at http://android-graphview.org/

    NOTE: Much of the code and comments in the .java files (and others) were auto-generated by Android Studio

*/

package com.dangerindexapp.team9.project_3_team_9;

import android.app.Activity;
import android.graphics.Color;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.LinearLayout;
import java.io.File;
import java.lang.*;
import com.jjoe64.graphview.GraphView;
import com.jjoe64.graphview.GraphViewDataInterface;
import com.jjoe64.graphview.GraphViewSeries;
import com.jjoe64.graphview.BarGraphView;
import com.jjoe64.graphview.ValueDependentColor;


public class MyGraph extends Activity {

    XMLManipulator manipulator;
    String xmlFile;

    String[] days;
    String[] indexes;

    String value;
    int index;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my_graph);

        manipulator = new XMLManipulator(getApplicationContext());
        xmlFile = getString(R.string.dataFileName);

        File f = getApplicationContext().getFileStreamPath(xmlFile); //get data from xml file
        XMLObj file = manipulator.loadXMLData(f);
        XMLObj records = file.getXMLObj("RecordsData");

        int size = records.size();
        index = 0;

        GraphViewSeries.GraphViewSeriesStyle seriesStyle = new GraphViewSeries.GraphViewSeriesStyle();
        seriesStyle.setValueDependentColor(new ValueDependentColor() {
            @Override
            public int get(GraphViewDataInterface data) {
                // the higher the bar the more red it will be
                return Color.rgb(255, (int)(255-((data.getY()/10)*255)), (int)(255-((data.getY()/10)*255)));
            }
        });

        // init example series data
        GraphViewSeries exampleSeries = new GraphViewSeries("Danger Index", seriesStyle, new GraphView.GraphViewData[] {}); //start empty graph view

        int i = size - 10;

        if(i <= 0) i = 0;

        for(; i < size; i ++) //get last 10 data points and put into exampleSeries
        {
            value = records.getElement(index).getSingletonValue();
            index = index + 1;
            exampleSeries.appendData(new GraphView.GraphViewData(index, Float.valueOf(value)), true, 10);
        }

        while(size < 10) //if size is less than 10, add zeros until their are 10 data points
        {
            exampleSeries.appendData(new GraphView.GraphViewData(index, 0f) , true, 10);
            index = index + 1;
            size = size + 1;
        }

        GraphView graphView = new BarGraphView(
                this // context
                , "Danger Record" // heading
        );


        graphView.getGraphViewStyle().setGridColor(Color.WHITE);
        graphView.getGraphViewStyle().setHorizontalLabelsColor(Color.WHITE);
        graphView.getGraphViewStyle().setVerticalLabelsColor(Color.WHITE);

        graphView.setBackgroundColor(Color.argb(255, 0, 0, 0));

        graphView.getGraphViewStyle().setNumHorizontalLabels(10);
        graphView.getGraphViewStyle().setNumVerticalLabels(11);
        graphView.getGraphViewStyle().setVerticalLabelsWidth(100);
        graphView.addSeries(exampleSeries); // data
        graphView.getGraphViewStyle().setTextSize(48);
        graphView.setViewPort(1, size - 1);
        graphView.setManualYAxisBounds(10, 0);

        LinearLayout layout = (LinearLayout) findViewById(R.id.Graphs);
        layout.addView(graphView);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main_menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
