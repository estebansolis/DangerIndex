/*
    CSCE 315-501
    Jonathan Sandell, Vyas Sathya, Esteban Solis, Josh Orndorff
    Project 3 - Final submission
    12/10/2014

    Description: Provides a detailed view of the individual factors taken into account when
    calculating danger.

    The ImageListAdapter class was adapted from the VizvAdapter class given in this tutorial:
    https://www.youtube.com/watch?v=qL2IyQxVi8k

    A different version of the code can also be found at:
    github.com/slidenerd/listview_with_image_using_array_adapter

    NOTE: Much of the code and comments in the .java files (and others) were auto-generated by Android Studio

*/

package com.dangerindexapp.team9.project_3_team_9;

import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Bundle;
import android.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;


import java.util.HashMap;

/*
 * A simple @link Fragment subclass.
 * Activities that contain this fragment must implement the
 * {@link DetailsFragment.OnFragmentInteractionListener} interface
 * to handle interaction events.
 * Use the {@link DetailsFragment#newInstance} factory method to
 * create an instance of this fragment.
 */


public class DetailsFragment extends Fragment {

    ListView list;
    String[] Titles;            // titles for categories
    String[] descriptions;      // values for categories

    // references to images used
    int[] images = {R.drawable.ic_maxtemp, R.drawable.ic_mintemp, R.drawable.ic_thunderstorm, R.drawable.ic_hail, R.drawable.ic_tornado, R.drawable.ic_air};

    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";
    private OnFragmentInteractionListener mListener;

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;


    public static DetailsFragment newInstance(String param1, String param2) {
        DetailsFragment fragment = new DetailsFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    public DetailsFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_details, container, false);
    }

    // OnViewCreated, set up ImageListAdapter with ListView to display categories, values, and images
    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        ReloadListView();
    }

    // Function to update ListView with new values
    public void ReloadListView() {
        try {
            Resources res = getResources();
            Titles = res.getStringArray(R.array.titles);                // titles for different sections
            descriptions = res.getStringArray(R.array.descriptions);    // stand-in descriptions
            list = (ListView) getActivity().findViewById(R.id.listViewArray);   // use ImageListAdapter
            ImageListAdapter adapter = new ImageListAdapter(getActivity(), Titles, images, descriptions);
            list.setAdapter(adapter);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // TODO: Rename method, update argument and hook method into UI event
    public void onButtonPressed(Uri uri) {
        if (mListener != null) {
            mListener.onFragmentInteraction(uri);
        }
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        try {
            mListener = (OnFragmentInteractionListener) activity;
        } catch (ClassCastException e) {
            throw new ClassCastException(activity.toString()
                    + " must implement OnFragmentInteractionListener");
        }

    }

    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }

    // Class to facilitate presentation of rows with text and images - see above for source
    class ImageListAdapter extends ArrayAdapter<String> {
        MainMenu menuActivity = (MainMenu) getActivity();   // get values
        HashMap<String, Float> dataValues = menuActivity.individualValues;
        Context context;

        // retrieve and format values appropriately
        String min_t = getString("MinTemp");
        String max_t = getString("MaxTemp");
        String hail = getString("hail");
        String thunder = getString("thunderstorm");
        String air = getString("airQuality");
        String tornado = getString("tornado");
        int[] images;
        String[] titleArray;
        String[] DescriptionArray = {max_t, min_t, thunder, hail, tornado, air};

           ImageListAdapter(Context c, String[]titles,int imgs[], String[] desc){
               super(c, R.layout.single_row, R.id.textView, titles);
               Log.d("Context is", c.toString());
               this.context = c;
               this.images = imgs;
               this.titleArray = titles;
           }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            View row = inflater.inflate(R.layout.single_row, parent, false);
            ImageView myImage = (ImageView) row.findViewById(R.id.imageView);
            TextView mytitle = (TextView) row.findViewById(R.id.textView);
            TextView mydescription = (TextView) row.findViewById(R.id.textView2);
            myImage.setImageResource(images[position]);
            mytitle.setText(titleArray[position]);
            mydescription.setText(DescriptionArray[position]);
            return row;
        }

        // Helper function to reitreve and format values
        private String getString(String in){
            String out;
            String val = String.valueOf(dataValues.get(in));    // get values
            if (val.equals("-999.0") || val.equals("null")) out = "No data available";
            else out = String.valueOf(dataValues.get(in));

            // add formatting
            if (!out.equals("No data available")) {
                if (in.equals("MinTemp") || in.equals("MaxTemp")) out = out + "Â°F"; // temperature
                else if (in.equals("hail") || in.equals("thunderstorm") || in.equals("tornado"))
                    out = out + "%";    // percent chances
            }
            return out;
        }
    }


    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        public void onFragmentInteraction(Uri uri);
    }
}

